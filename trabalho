#include <iostream>
#include <conio.h>
#include <string.h>
#include <string>
#include <iomanip>

using namespace std;

void incluirMedico();
void incluirPaciente();
void excluirPaciente();
void excluirMedico();
void agendarConsulta();
void consultarMedicamento();
void verificarEstoqueMedicamentos();
void calcularValorTotalConsultas();
void reorganizarPacientes();
void exibirmenu();

//Declaração de structs 

struct cidade{
	int codigo_cidade;
	string nome; 
	string uf;
};
struct indice_cidade{
	int codigo;
	int ender;
};
struct especialidade{
	int codigo_especialidade;
	string descricao;
};
struct indice_especialidade{
	int codigo;
	int ender;
};
struct medico{
	int cod_medico;
	string nome;
	int codigo_especialidade;
	string endereco;
	string numero;
	int codigo_cidade;
};
struct indice_medicos {
	int codigo;
	int ender;
};
struct paciente{
	int codigo_paciente;
	string nome;
	string endereco;
	int codigo_cidade;
};
struct indice_paciente{
	int codigo;
	int ender;
};

struct cid{ 
	int codigo_cid;
	string descricao;
};
struct indice_CID {
	int codigo;
	int ender;
};
struct medicamento{
	int codigo_medicamento;
	string descricao;
	int quant_estoque;
	int estoque_min;
	int estoque_max;
	float preco_unitario;
};
struct indice_medicamento {
	int codigo;
	int ender;
};
struct consulta{
	int codigo_consulta; 
	int codigo_paciente;
	int codigo_medico;
	string data;
	string horario;
	int codigo_cid; 
	int codigo_medicamento;
	int quantidade_medicamento; 
};
struct indice_consulta {
	int codigo;
	int ender;
};
//Fim das structs

//Leitura de dados 

void lerDadosCidades (struct cidade city[], int &cont){
    int i = 0;
    for (int saida = 1; i < 2 && saida != 0; i++){
        cout << "\n\nCodigo da Cidade " << (i+1) << ": ";
        cin >> city[i].codigo_cidade;
        if (city[i].codigo_cidade > 0){
            cout << "Nome: ";
            cin >> city[i].nome;
            cout << "UF: ";
            cin >> city[i].uf;
        }
        else saida = 0;
    }
    cont = i-1;
}
void lerDadosEspecialidades (struct especialidade esp[], int &cont){
    int i = 0;
    for (int saida = 1; i < 2 && saida != 0; i++){
        cout << "\n\nCodigo da Especialidade " << (i+1) << ": ";
        cin >> esp[i].codigo_especialidade;
        if (esp[i].codigo_especialidade > 0){
            cout << "Descricao: ";
            cin >> esp[i].descricao;
        }
        else saida = 0;
    }
    cont = i-1;
}
void lerDadosCID (struct cid cid[], int &cont){
    int i = 0;
    for (int saida = 1; i < 2 && saida != 0; i++){
        cout << "\n\nCodigo do CID " << (i+1) << ": ";
        cin >> cid[i].codigo_cid;
        if (cid[i].codigo_cid > 0){
            cout << "Descricao: ";
            cin >> cid[i].descricao;
        }
        else saida = 0;
    }
    cont = i-1;
}
void lerDadosMedicamentos (struct medicamento medicamen[], int &cont){
    int i = 0;
    for (int saida = 1; i < 2 && saida != 0; i++){
        cout << "\n\nCodigo do Medicamento " << (i+1) << ": ";
        cin >> medicamen[i].codigo_medicamento;
        if (medicamen[i].codigo_medicamento > 0){
            cout << "Descricao: ";
            cin >> medicamen[i].descricao;
            cout << "Quantidade em estoque: ";
            cin >> medicamen[i].quant_estoque; 
            cout << "Estoque Minimo: ";
            cin >> medicamen[i].estoque_min; 
            cout << "Estoque Maximo: ";
            cin >> medicamen[i].estoque_max;
            cout << "Preco Unitario: ";
            cin >> medicamen[i].preco_unitario; 
            
        }
        else saida = 0;
    }
    cont = i-1;
}

//Fim da leitura de Dados

//Inclusao de medicos 

void inclusao (struct indice_medicos[], struct medico med[], int &cont, int cod){
    cont++;
    // inclusao do novo registro na area de dados
    med[cont].cod_medico = cod;
    cout << "Nome: ";
    cin >> med[cont].nome;
    cout << "Endereco: ";
    cin >> med[cont].endereco;
    cout << "Codigo da cidade: ";
    cin >> med[cont].cod_cidade;
    cout << "Estado: ";
    cin >> med[cont].uf;
    cout << "Numero: ";
    cin>> med[cont].numero;
    cout << " Codigo da Especialidade: ";
    cin >> med[cont].codigo_especialidade;
    // inclusao na area de indices
    int i;
    for (i = cont - 1; idx[i].codigo > cod; i--){
        idx[i+1].codigo = idx[i].codigo;
        idx[i+1].ender = idx[i].ender;
    }
    idx[i+1].codigo = cod;
    idx[i+1].ender = cont;
    cout << "\n\nInclusao realizada com Sucesso";
}











	

char menu() {

    
    int op;
    cout << "\n+==============================================+";
    cout << "\n|            MENU DE OPÇÕES                    |";
    cout << "\n|==============================================|";
    cout << "\n|            0. Sair                           |";
    cout << "\n|            1. Leitura de Cidades             |";
    cout << "\n|            2. Leitura de Especialidade       |";
    cout << "\n|            3. Inclusão de Instrutores        |";
    cout << "\n|            4. Inclusão de Alunos             |";
    cout << "\n|            5. Exclusão de Alunos             |";
    cout << "\n|            6. Inclusão de Turmas             |";
    cout << "\n|            7. Inclusão de Matrículas         |";
    cout << "\n|            8. Consultar Turmas               |";
    cout << "\n|            9. Exibir Turmas Completas        |";
    cout << "\n|           10. Exibir Matrículas              |";
    cout << "\n+==============================================+";
    cout << "\nEscolha uma opção: ";
    cin >> op;
    return op;
}

int main() {
	setlocale(LC_ALL, "Portuguese");
	struct cidade city[2];
	struct especialidade esp[2];
	struct medico med[2];
	struct paciente pac[2];
	struct cid cid[2];
	struct medicamento medicamen[2];
	struct consulta con[2]; 
	int contador_cidade, contador_esp, contador_cid, contador_medicamentos, contador_medicos;
	


int opcao;

    do {
        opcao = menu();
        switch (opcao) {
            case 1:
                lerDadosCidades(city,contador_cidade);
                getch();
                break;
				menu();
            case 2:
                lerDadosEspecialidades(esp,contador_esp);
                getch();
				break;
				menu();
			case 3:
				inclusaoMedicos(med,idx,contador_med);
				getch();
				break;
	}	
    } while (opcao != 0);

    return 0;
}
